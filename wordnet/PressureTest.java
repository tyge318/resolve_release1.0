// WordNet Synonym Replacing Examplepackage wordnet;import java.io.BufferedReader;import java.io.File;import java.io.FileReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.OutputStream;import java.io.PrintStream;import java.net.InetAddress;import java.net.ServerSocket;import java.net.Socket;import java.text.BreakIterator;import java.util.*;import org.codehaus.jackson.JsonProcessingException;import edu.stanford.nlp.tagger.maxent.MaxentTagger;import net.didion.jwnl.*;import net.didion.jwnl.data.*;import net.didion.jwnl.data.relationship.*;import net.didion.jwnl.dictionary.Dictionary;public class PressureTest {	static int iterationTime = 20;    public static void main(String[] args) throws JWNLException, JsonProcessingException, IOException, ClassNotFoundException {        // Initialize the database        // You must configure the properties file to point to your dictionary files        WordNetHelper.initialize("file_properties.xml");        String text = "As I looked upon the old woman, I saw that she was much older than I originally thought. Her brown, wrinkly skin looked like be discard, wrinkled paper bag left to itself. Her eyes, over the year, had grown dull and cloudy as though she had seen too much suffering. Her back was stooped over as if she carried invisible weights upon them. Her gray hair gets thin, and her smile showed that her teeth were rather yellow. Along with this, it could be seen that the lips, once beautiful and they were dry and cracked. She stood slowly to greet me and hobbled towards me with her cane. Suddenly, I feel so *sad. Time took everything from her but fragile body. So weak,So strong.";        for(int i=0; i<iterationTime; i++) {        	requestToServer thread = new requestToServer(text);        	thread.start();        }//		final File folder = new File("userInputs" + File.separator );//		ArrayList<String> allInputFileList = PatternStats.listFilesForFolder(folder);//		Iterator<String> iterator = allInputFileList.iterator();//		BufferedReader br;//		while( iterator.hasNext()) {//			String currentFile = iterator.next();//			if( currentFile.equals(".DS_Store") || currentFile.equals("desktop.ini")) continue;//			//			br = new BufferedReader(new FileReader("userInputs" + File.separator + currentFile));//	        //read user's input from file.////	        System.out.println("Input file path: " + args[0] + "\n");//	        String test = "";//			String line;//			while ((line = br.readLine()) != null) {//					test += (line + "\n");//			}//			br.close();	//	        System.out.println("Content of the input file:\n" + test );       //		}          }}class requestToServer extends Thread {	public String inputText;	requestToServer(String text) {		inputText = text;	}	public void run() {		try{ 			System.out.println("ThreadID: " + Thread.currentThread().getId() + " - begin running...");			InetAddress serverHost = InetAddress.getByName("doraemon.iis.sinica.edu.tw"); 			int serverPort = 2468;			Socket clientSocket = new Socket(serverHost, serverPort);			InputStream Is = clientSocket.getInputStream();			OutputStream Os = clientSocket.getOutputStream();			BufferedReader br = new BufferedReader(new InputStreamReader(Is));			PrintStream Ps = new PrintStream(Os);						Ps.println(inputText);			char[] buff = new char[1024*1024];			int length = br.read(buff);						String result = new String(buff, 0, length);			result = result.replace("\n", "\t");			System.out.println("Received(ID = " + Thread.currentThread().getId() + "):" + result);		} 		catch(Exception e){e.printStackTrace( );}	}}